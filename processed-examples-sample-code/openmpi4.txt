Use Case: MPI parallel processing with OpenMPI4

Code details and examples:
1. Sample input file (input.txt):
```
Hello
World
```

2. Sample MPI code (mpi_example.c):
```c
#include <stdio.h>
#include <string.h>
#include <mpi.h>

int main(int argc, char** argv) {
    int rank, size;
    char message[100];
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (rank == 0) {
        FILE *file = fopen("input.txt", "r");
        fgets(message, 100, file);
        fclose(file);
    }

    MPI_Bcast(message, 100, MPI_CHAR, 0, MPI_COMM_WORLD);

    printf("Process %d received: %s\n", rank, message);

    MPI_Finalize();
    return 0;
}
```

3. Compile and run MPI code:
```bash
mpicc mpi_example.c -o mpi_example
mpirun -np 4 ./mpi_example
```

This example code reads the first line from the file "input.txt" by rank 0 and broadcasts the message to all processes for them to print.