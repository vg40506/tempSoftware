Use Case: C++ code wrapped with Python using pybind11

Code details and examples:
```cpp
#include <pybind11/pybind11.h>

int add(int i, int j) {
    return i + j;
}

namespace py = pybind11;

PYBIND11_MODULE(example, m) {
    m.def("add", &add, "A function which adds two numbers");
}
```

To compile the above C++ code using pybind11, you can use the following command:
```bash
c++ -O3 -Wall -shared -std=c++11 -fPIC `python3 -m pybind11 --includes` example.cpp -o example`python3-config --extension-suffix`
```

To use the compiled module in Python:
```python
import example

result = example.add(3, 4)
print(result)  # Output: 7
```