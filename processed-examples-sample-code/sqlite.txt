Use Case: SQLite is a popular embedded relational database management system.

Code details and examples: 
1. Creating a SQLite database and table:
```sql
CREATE TABLE Employees (
    ID INTEGER PRIMARY KEY,
    Name TEXT NOT NULL,
    Department TEXT,
    Salary REAL
);
```

2. Inserting data into the table:
```sql
INSERT INTO Employees (Name, Department, Salary) VALUES ('Alice', 'IT', 50000);
INSERT INTO Employees (Name, Department, Salary) VALUES ('Bob', 'HR', 45000);
```

3. Querying data from the table:
```sql
SELECT * FROM Employees;
```

4. Updating data in the table:
```sql
UPDATE Employees SET Department = 'Finance' WHERE ID = 2;
```

5. Deleting data from the table:
```sql
DELETE FROM Employees WHERE Name = 'Alice';
```

6. Connecting to a SQLite database from the command line:
```bash
sqlite3 database.db
```

7. Running SQL queries from the command line:
```bash
sqlite3 database.db "SELECT * FROM Employees;"
```

Note: SQLite commands can be run in a SQLite shell, SQLite GUI tools, or integrated into applications through libraries.

For advanced usage and features of SQLite, refer to the official SQLite documentation: https://www.sqlite.org/docs.html