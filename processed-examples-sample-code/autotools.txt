Use Case: autotools is a set of tools designed to help create portable and platform-independent build systems for Unix-like systems. It includes tools like autoconf, automake, and libtool.

Code details and examples:
1. autoconf:
Autoconf is used to generate configure scripts from a configure.ac input file. Here is an example of a simple configure.ac file:
```
AC_INIT([hello], [1.0], [hello@example.com])
AC_PREREQ([2.69])
AC_CONFIG_SRCDIR([hello.c])
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_OUTPUT
```
To generate the configure script:
```
autoconf
```

2. automake:
Automake is used to generate Makefile.in files from Makefile.am input files. Here is an example of a simple Makefile.am file:
```
bin_PROGRAMS = hello
hello_SOURCES = hello.c
```
To generate Makefile.in:
```
automake --add-missing
```

3. libtool:
Libtool is used to manage shared libraries on various Unix-like systems. Here is an example of using libtool to compile a shared library:
```
libtool --mode=compile gcc -c -o example.lo example.c
libtool --mode=link gcc -o libexample.la example.lo
```

Note: The commands provided above are just examples and may need to be adjusted based on the specific project requirements.

Please refer to the official documentation for more details and advanced usage.