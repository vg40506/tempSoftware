Use Case: Linear algebra library for dense matrix computations

Code details and examples:
- Sample input file format:
```
4 4
1.0 2.0 3.0 4.0
5.0 6.0 7.0 8.0
9.0 10.0 11.0 12.0
13.0 14.0 15.0 16.0
```

- Code snippet for matrix-matrix multiplication using libflame:
```c
#include <stdio.h>
#include <flame.h>

int main() {
    int m = 4; // rows of A
    int n = 4; // cols of B
    int k = 4; // cols of A and rows of B

    FLA_Init();

    FLA_Obj A, B, C;
    FLA_Obj_create(FLA_DOUBLE, m, k, 1, &A);
    FLA_Obj_create(FLA_DOUBLE, k, n, 1, &B);
    FLA_Obj_create(FLA_DOUBLE, m, n, 1, &C);

    // Initialize A, B matrices
    FLA_Random_matrix(A);
    FLA_Random_matrix(B);

    // Perform matrix multiplication C = A * B using libflame
    FLA_Gemm(FLA_NO_TRANSPOSE, FLA_NO_TRANSPOSE, FLA_ONE, A, B, FLA_ZERO, C);

    // Print the result matrix C
    FLA_Obj_show("Result C:", C, "%9.2f", "");

    FLA_Obj_free(&A);
    FLA_Obj_free(&B);
    FLA_Obj_free(&C);

    FLA_Finalize();

    return 0;
}
```

- Command to compile (assuming file is named `matrix_mult.c`):
```
gcc matrix_mult.c -o matrix_mult -lflame -lblas -llapack
```

- Command to run:
```
./matrix_mult
```