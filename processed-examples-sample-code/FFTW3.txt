Use Case: Fastest Fourier Transform in the West (FFTW3) is a software library for computing discrete Fourier transforms (DFTs). It is widely used in scientific computing and signal processing applications.

Code details and examples:
1. FFT of a 1D array using FFTW3 in C:
```c
#include <fftw3.h>
#include <stdio.h>

int main()
{
    fftw_complex *in, *out;
    fftw_plan p;
    
    int N = 10;
    in = (fftw_complex*) fftw_malloc(sizeof(fftw_complex) * N);
    out = (fftw_complex*) fftw_malloc(sizeof(fftw_complex) * N);
    
    // Initialize input array
    for (int i = 0; i < N; i++) {
        in[i][0] = i; // Real part
        in[i][1] = 0; // Imaginary part
    }
    
    p = fftw_plan_dft_1d(N, in, out, FFTW_FORWARD, FFTW_ESTIMATE);
    fftw_execute(p);
    
    // Print the output array
    for (int i = 0; i < N; i++) {
        printf("%f + %fi\n", out[i][0], out[i][1]);
    }
    
    fftw_destroy_plan(p);
    fftw_free(in);
    fftw_free(out);
    
    return 0;
}
```

2. FFT of a 2D array using FFTW3 in Python with PyFFTW library:
```python
import numpy as np
import pyfftw

N = 10
in_data = np.random.rand(N, N) + 1j * np.random.rand(N, N)

# Create FFTW plan
p = pyfftw.FFTW(in_data, in_data, axes=(0,1), direction='FFTW_FORWARD', flags=('FFTW_ESTIMATE',))

# Execute FFT
out_data = p()

print(out_data)
```

To compile the C code using FFTW3 library (assuming FFTW3 is installed), you can use the following command:
```
gcc -o fft_example fft_example.c -lfftw3 -lm
```

To run the compiled C program:
```
./fft_example
```