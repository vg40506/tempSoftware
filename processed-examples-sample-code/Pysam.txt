Use Case: Pysam is a Python module for reading, manipulating, and writing genomic data in BAM (Binary Sequence Alignment/Map) format.

Code details and examples:
1. Reading a BAM file:
```python
import pysam

bam_file = pysam.AlignmentFile("input.bam", "rb")
for read in bam_file.fetch():
    print(read)
bam_file.close()
```

2. Writing a BAM file:
```python
import pysam

bam_in = pysam.AlignmentFile("input.bam", "rb")
bam_out = pysam.AlignmentFile("output.bam", "wb", header=bam_in.header)

for read in bam_in.fetch():
    bam_out.write(read)

bam_in.close()
bam_out.close()
```

3. Fetch reads in a specific region:
```python
import pysam

bam_file = pysam.AlignmentFile("input.bam", "rb")
for read in bam_file.fetch("chromosome_name", start_position, end_position):
    print(read)
bam_file.close()
```

4. Get basic statistics from a BAM file:
```python
import pysam

bam_file = pysam.AlignmentFile("input.bam", "rb")
total_reads = 0
for read in bam_file.fetch():
    total_reads += 1

print("Total number of reads: ", total_reads)

bam_file.close()
```